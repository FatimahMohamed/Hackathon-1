/* font */
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

/* variables */
:root {
    --font: "IBM Plex Mono", sans-serif;
    /* dark blue background */
    --background-colour-1: #060018;
    /* highlight blue */
    --highlight-colour-1: #85c7f2;
    /* highlight green */
    --highlight-colour-2: #c3e8bd;
    /* correct green */
    --correct-green: #9cdd92;
    /* incorrect red */
    --incorrect-red: #ffa1a1;
    /* black overlay */
    --black-overlay: linear-gradient(to right, rgba(0,0,0,0.7), rgba(0,0,0,0.7));
    /* colour for tick mark */
    --tick-colour: #dbfdd7;
    /* colour for cross mark */
    --cross-colour: #ffd2d2;
}

/* general styles */

body {
    font-family: var(--font);
    color: white;
    background-color: var(--background-colour-1);
}

h1, h2 {
    font-weight: bold;
}

.vertical-align-text {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.horizontal-align-text {
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.gradient-text {
    background-image: linear-gradient(to left, var(--highlight-colour-1), var(--highlight-colour-2));
    color: transparent;
    background-clip: text;
}

.hidden {
    display: none;
}

.btn-light:hover {
    transform: scale(1.1);
    transition: all 0.5s;
}

.btn-light {
    font-weight: bold;
}

/* nav styling */

/* header styling */

.hero-title {
    font-weight: 700;
}

#header {
    padding: 20px;
    margin-bottom: 50px;
}

/* body styling */

.question-title {
    font-weight: 700;
    padding-bottom: 20px;
}

#score {
    font-size: 1.2rem;
    font-weight: bold;
}

#score-box {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
}

#correct-text, #correct-amount {
    color: var(--correct-green);
    font-weight: bold;
}

#incorrect-text, #incorrect-amount {
    color: var(--incorrect-red);
    font-weight: bold;
}

.tagline {
    font-weight: bold;
}

.answer-choice {
    padding: 0px;
    margin-bottom: 75px;
}

.answer {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid white;
    min-width: 125px;
    border-radius: 50%;
    vertical-align: middle;

}

.answer::before {
    content: '';
    float: left;
    width: auto;
    padding-bottom: 100%;
}

.answer-choice:hover {
    transform: scale(1.3);
    transition: all 0.5s;
}

#initial-text {
    font-size: 1.5rem;
    font-weight: bold;
}

#final-result-title {
    font-weight: 700;
    padding-bottom: 20px;
}

#final-correct, #final-correct-amount {
    color: var(--correct-green);
    font-size: 1.5rem;
    font-weight: bold;
}

#final-incorrect, #final-incorrect-amount {
    color: var(--incorrect-red);
    font-size: 1.5rem;
    font-weight: bold;
}

#retry-button-box {
    padding-top: 20px;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

#feedback-box {
    padding-bottom: 50px;
}

#feedback {
    font-size: 1.5rem;
    font-weight: 700;
}

.feedback-mark-tick {
    font-size: 4rem;
    font-weight: 800;
    color: var(--tick-colour);
}

.feedback-mark-cross {
    font-size: 4rem;
    font-weight: 800;
    color: var(--cross-colour);
}

.feedback-correct {
    color: var(--correct-green);
}

.feedback-incorrect {
    color: var(--incorrect-red);
}
/* instructions modal */

.modal-content {
    background-color: var(--background-colour-1);
}

#settings-label {
    font-weight: 700;
}

.modal-header {
    border: none;
}

.modal-text {
    color: white;
}

/* planet backgrounds */
/* this are all capitalised as its easier to apply the classes if they are */
/* i have it set here so that there is a black overlay on top of a colour, using linear-gradient for this as it is easy */
.black-background {
    background-color: black;
}

.Mercury {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(65, 65, 65), rgb(65, 65, 65));
}

.Venus {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(212, 159, 43), rgb(212, 159, 43));
}

.Earth {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(118, 255, 136), rgb(118, 255, 136));
}

.Mars {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(255, 99, 99), rgb(255, 99, 99));
}

.Jupiter {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(255, 153, 70), rgb(255, 153, 70));
}

.Saturn {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(255, 244, 90), rgb(255, 244, 90));
}

.Uranus {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(131, 240, 255), rgb(131, 240, 255));
}

.Neptune {
    background-image: var(--black-overlay), linear-gradient(to right, rgb(66, 63, 255), rgb(66, 63, 255));
}

